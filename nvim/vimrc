let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
Plug '~/.vim/plugins/lightline'
Plug '~/.vim/plugins/FocusPreviousWindowsWhenClose'
Plug 'kristijanhusak/vim-hybrid-material'
Plug 'tpope/vim-surround'
Plug 'https://codeberg.org/timoses/vim-venu.git'
Plug 'leafOfTree/vim-matchtag'
Plug 'tpope/vim-fugitive'
Plug 'junegunn/gv.vim'
Plug 'chr4/nginx.vim'
Plug 'cespare/vim-toml'
Plug 'pprovost/vim-ps1'
Plug 'ryanoasis/vim-devicons'
call plug#end()

" Color
set termguicolors
let g:enable_bold_font = 1
let g:enable_italic_font = 1
set background=light
colorscheme hybrid_material

" Cursor
let &t_SI.="\e[6 q"
let &t_EI.="\e[4 q"
let &t_SR.="\e[3 q"

" No history
let skip_defaults_vim=1
set viminfo=""

" Encoding
set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936
set termencoding=utf-8
set encoding=utf-8

" Line number netrw
let g:netrw_bufsettings = 'noma nomod nu nowrap ro nobl'

" Enable highlight syntax
syntax enable

" Column number
set number
set relativenumber
set numberwidth=4

" Lightline
set noshowmode
set laststatus=2
set showtabline=2
"""
let g:lightline = {
      \ 'colorscheme': 'ayu_mirage',
      \ 'active': {
      \   'left': [ [ 'filename' ],
      \             [ 'readonly', 'modified', 'split' ] ],
      \   'right': [ [ 'fileencoding' ],
      \             [ 'fileformat' ],
      \             [ 'percent' ],
      \             [ 'lineinfo' ],
      \             [ 'mode' ] ]
      \ },
      \ 'inactive': {
      \   'left': [ [ 'filename' ],
      \             [ 'readonly', 'modified', 'split' ] ],
      \   'right': [ [ 'fileencoding' ],
      \             [ 'fileformat' ],
      \             [ 'percent' ],
      \             [ 'lineinfo' ],
      \             [ 'mode' ] ]
      \ },
      \   'tabline': {
      \     'left': [['tabs']],
      \     'right': []
      \   },
      \ 'component': {
      \   'filename': '%F',
      \   'lineinfo': '%l/%L',
      \   'split': '-',
      \ },
      \ 'component_function': {
      \   'readonly': 'LightlineReadonly',
      \   'clock': 'LightlineClock',
      \   'ampm': 'LightlineAmpm',
      \   'date': 'LightlineDate',
      \   'fileformat': 'MyFileformat',
      \ },
      \ }
"""
function! MyFileformat()
  return &fileformat . ' ' . WebDevIconsGetFileFormatSymbol()
endfunction
"""
function! LightlineReadonly()
  return &readonly ? '[Read-only]' : ''
endfunction
""""
"function! LightlineClock()
"  return strftime('%I:%M')
"endfunction
""""
"function! LightlineAmpm()
"  return strftime('%p')
"endfunction
""""
"function! LightlineDate()
"  return strftime('%A, %d/%m/%Y')
"endfunction

" Mapping
map <C-a> <esc>:%y*<CR>
map <C-h> <esc><C-w>h
map <C-j> <esc><C-w>j
map <C-k> <esc><C-w>k
map <C-l> <esc><C-w>l

" Venu
let s:menu = venu#create('Venu')
"""
let s:help = venu#create('Help')
call venu#addItem(s:help, 'Surround', 'help Surround')
call venu#addItem(s:menu, 'Help', s:help)
"""
let s:snippet = venu#create('Snippets')
call venu#addItem(s:snippet, 'Snippets', 'exe "normal ivoz"|exe "normal ovn-z<>"')
call venu#addItem(s:menu, 'Snippets', s:snippet)
"""
call venu#addItem(s:menu, 'List Plugins', 'PlugStatus')
"""
call venu#register(s:menu)
